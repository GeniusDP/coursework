version: '3'

services:
  # auth-postgres:
  #   image: 'postgres'
  #   container_name: 'auth-postgres'
  #   ports:
  #     - 5433
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=postgres
  #   volumes:
  #     - ./user-management-service/src/main/resources/init_db.sql:/docker-entrypoint-initdb.d/init.sql
  
  # auth-service:
  #   build: ./authservice
  #   container_name: 'auth-service'
  #   ports:
  #     - 8081:8081
  #   environment:
  #     - DB_URL=jdbc:postgresql://auth-postgres/postgres?user=postgres&password=postgres
  #   depends_on:
  #     - auth-postgres
  # user-management-service:
  #   build: ./user-management-service
  #   container_name: 'user-management-service'
  #   ports:
  #     - 8082:8082
  #   environment:
  #     - DB_URL=jdbc:postgresql://auth-postgres/postgres?user=postgres&password=postgres
  #     - AUTH_SERVICE_URL=http://auth-service:8081/api/auth
  #   depends_on:
  #     - auth-postgres
  #     - auth-service
  
  checkerservice-postgres:
    image: 'postgres'
    restart: always
    container_name: 'checkerservice-postgres'
    ports:
      - 5434
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./checkerservice/src/main/resources/init_db.sql:/docker-entrypoint-initdb.d/init.sql
  
  checkerservice:
    build: ./checkerservice
    restart: always
    container_name: 'checkerservice'
    ports:
      - 8084:8084
    environment:
      - DB_URL=jdbc:postgresql://checkerservice-postgres/postgres?user=postgres&password=postgres
      - AUTH_SERVICE_URL=http://auth-service:8081/api/auth
      - CHECKER_IMAGE_NAME=zaranik/checker:1.5.7
      - NETWORK_NAME=coursework_default
    depends_on:
      - checkerservice-postgres
#      - auth-service
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
